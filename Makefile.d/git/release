release:
	@\
	echo "[1m正在检测冲突[0m ... \c"; \
	git fetch git@github.com:eleme/$(projectname) master > /dev/null 2>&1; \
	lost=$$(git cherry $$(git merge-base FETCH_HEAD HEAD) $$(git rev-parse FETCH_HEAD) | awk 'BEGIN{i=0}{i++}END{print i}'); \
	echo "[1G[K\c"; \
	if [ $$lost -gt 0 ]; then \
	  echo "‼️  [1m当前落后主分支 [35m$$lost[0m[1m 个提交，必须先执行 rebase，是否立即执行？ [0m[Y/n] \c"; \
	  read key; \
	  if [ "$$key" = "Y" -o "$$key" = "y" -o "$$key" = "" ]; then \
	    git rebase FETCH_HEAD; \
	    git push git@github.com:eleme/$(projectname) $(branchname):null -f; \
	    curl http://eless.tools.elenet.me/api/redelivery/?format=json \
	      -d "app_id=fe.$(projectname)&giturl=https://github.com/eleme/$(projectname)&branch=release&commitId=$(commitid)"; \
	    echo " on fe.$(projectname)"; \
	  fi; \
	else \
	  git push git@github.com:eleme/$(projectname) $(branchname):null -f; \
	  curl http://eless.tools.elenet.me/api/redelivery/?format=json \
	    -d "app_id=fe.$(projectname)&giturl=https://github.com/eleme/$(projectname)&branch=release&commitId=$(commitid)"; \
	  echo " on fe.$(projectname)"; \
	fi
